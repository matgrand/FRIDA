clc; clear all; close all; restoredefaultpath;
dir_FRIDA = '../../../source/routines_FRIDA/';
addpath(genpath(dir_FRIDA))

%% Step 1: generate the geometries and meshes of rfx
% step1_prep_input_geo_RFX 

%% Step 2: generate

% create a struct for the input, let's hardcode everything first
plaparameter.Centroid   = [2, 0];
plaparameter.R_0        = [1.995, 0];
plaparameter.beta_0     = 0.1; %0.3;  %0.1;
plaparameter.alpha_M    = 2; %1.5;  %2;
plaparameter.alpha_N    = 0.7; %1.001;  %0.7;
plaparameter.Ipla       = 1.97e6; %50e3;  %1.9693305e6;

%conductors
Conductors.Nconductors = 64;
% Conductors.Nturns = ones(64,1);
Conductors.Nturns = [8;8;8;6;6;6;6;6;6;6;6;6;4;4;4;2;1;3;1;3;24;24;24;24;24;24;24;24;8;8;8;6;6;6;6;6;6;6;6;6;4;4;4;2;1;3;1;3;24;24;24;24;24;24;24;24;60;60;60;60;60;60;60;60];

Conductors.Currents = [3136.98657226563;2352.73992919922;2352.73992919922;1568.49328613281;392.123321533203;3136.98657226563;2352.73992919922;2352.73992919922;1568.49328613281;392.123321533203;-8124.44140625000;-6093.33105468750;-6093.33105468750;-4062.22070312500;-1015.55517578125;-8124.44140625000;-6093.33105468750;-6093.33105468750;-4062.22070312500;-1015.55517578125;-6897.70849609375;-5173.28137207031;-5173.28137207031;-1724.42712402344;-2586.64068603516;-6897.70849609375;-5173.28137207031;-5173.28137207031;-1724.42712402344;-2586.64068603516;-2787.45007324219;-2787.45007324219;-2787.45007324219;-1858.30004882813;-1393.72503662109;-2787.45007324219;-2787.45007324219;-2787.45007324219;-1858.30004882813;-1393.72503662109;-93430.0898437500;-93430.0898437500;-146105.789062500;-146105.789062500;-125098.183593750;-125098.183593750;-109744.265625000;-109744.265625000;-127990.722656250;-127990.722656250;-123092.648437500;-123092.648437500;-122726.437500000;-122726.437500000;-141580.371093750;-141580.371093750;0;0;0;0;0;0;0;0];
% Conductors.Currents = [-3487.53548826186;-2372.28330822801;-2527.50168680387;-1795.74766719715;-3487.53548826186;-2372.28330822801;-2527.50168680387;-1795.74766719715;-3487.53548826186;-2372.28330822801;-2527.50168680387;-1795.74766719715;-1795.74766719715;-3487.53548826186;-2372.28330822801;-2527.50168680387;-3487.53548826186;-2527.50168680387;-2372.28330822801;-1795.74766719715;192.560591393756;-1911.79709375263;832.275618473171;1621.86192509115;-1432.14788082058;-558.971699500839;-48.5285880524480;-56.4688863611937;-3487.53548826186;-2372.28330822801;-2527.50168680387;-1795.74766719715;-3487.53548826186;-2372.28330822801;-2527.50168680387;-1795.74766719715;-3487.53548826186;-2372.28330822801;-2527.50168680387;-1795.74766719715;-1795.74766719715;-3487.53548826186;-2372.28330822801;-2527.50168680387;-3487.53548826186;-2527.50168680387;-2372.28330822801;-1795.74766719715;192.560591393756;-1911.79709375263;832.275618473171;0;0;-558.971699500839;-48.5285880524480;-56.4688863611937;0;0;0;0;0;0;0;0];
% Conductors.Currents = [-2.40106601268053e-10;-49999.9999999994;-17449.2208908664;-12151.3857969660;-2.40106601268053e-10;-49999.9999999994;-17449.2208908664;-12151.3857969660;-2.40106601268053e-10;-49999.9999999994;-17449.2208908664;-12151.3857969660;-12151.3857969660;-2.40106601268053e-10;-49999.9999999994;-17449.2208908664;-2.40106601268053e-10;-17449.2208908664;-49999.9999999994;-12151.3857969660;-7.18500814400613e-11;-2.63753463514149e-11;-1.63709046319127e-11;-7.27595761418343e-12;-3.25665496347938e-07;-6250.00000000000;-6249.99999999999;-3293.38116703454;-2.40106601268053e-10;-49999.9999999994;-17449.2208908664;-12151.3857969660;-2.40106601268053e-10;-49999.9999999994;-17449.2208908664;-12151.3857969660;-2.40106601268053e-10;-49999.9999999994;-17449.2208908664;-12151.3857969660;-12151.3857969660;-2.40106601268053e-10;-49999.9999999994;-17449.2208908664;-2.40106601268053e-10;-17449.2208908664;-49999.9999999994;-12151.3857969660;-7.18500814400613e-11;-2.63753463514149e-11;-1.63709046319127e-11;0;0;-6250.00000000000;-6249.99999999999;-3293.38116703454;0;0;0;0;0;0;0;0];
% kon =  [1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0;
%         0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0;
%         0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0;
%         0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0;
%         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0;
%         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0;
%         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0;
%         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;
%         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0;
%         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;
%         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0;
%         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0;
%         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0;
%         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1];
% currents_14 = [-3487.53548826186;-2372.28330822801;-2527.50168680387;-1795.74766719715;192.560591393756;-1911.79709375263;832.275618473171;1621.86192509115;0;-1432.14788082058;0;-558.971699500839;-48.5285880524480;-56.4688863611937];
% Conductors.Currents = kon'*currents_14;

% %add the 8 saddle coils at the end
% Conductors.Currents = [Conductors.Currents; zeros(8,1)];

assert(length(Conductors.Currents) == Conductors.Nconductors, 'Conductors.Currents must have the same length as Conductors.Nconductors');
assert(length(Conductors.Nturns) == Conductors.Nconductors, 'Conductors.Nturns must have the same length as Conductors.Nconductors');

%assemble the full struct
IE_evol.plaparameter = plaparameter;
IE_evol.Conductors = Conductors;
IE_evol.time_sim = nan;

%% let's run FRIDA
SETTINGS.filename = 'mg_frida_test'; %name of the test
dir_FRIDA = '../../../source/routines_FRIDA/'; %where the function is

%resaving the inputs for the frida function call later
load('./data_in_FRIDA/tmp_INPUT_FRIDA_geo.mat');
save(['./data_in_FRIDA/INPUT_FRIDA_geo_', SETTINGS.filename, '.mat'], 'meshData', 'meshData_pla', 'sensors');
save(['./data_in_FRIDA/INPUT_FRIDA_equil_', SETTINGS.filename, '.mat'], 'IE_evol');

SETTINGS.filename_save = 'temp_out';
SETTINGS.filename_out = 'temp_save';

SETTINGS.FIRST_SOLUTION = false;
SETTINGS.SAVE_OUTPUT = false;
SETTINGS.SOLVER = 'NR';
SETTINGS.RUN_MEX_ROUTINE = true;
SETTINGS.VAC_METHOD = 2;
SETTINGS.FIGURES_DEBUG = 0; % careful: setting to 1 my glitch the os, too many figures

% SETTINGS.J_c_t0 = J_c_t0;
% SETTINGS.v_gap_t0 = v_gap_t0;

SETTINGS.QuasiNewton = true;
SETTINGS.QuasiNewton_factor = 0.5;

SETTINGS.ii_START = 1;
SETTINGS.PREPROC = true;
SETTINGS.FIGURES = true;
SETTINGS.RUN = 1; %1=static plasma
close all

%% Run FRIDA and store the results

[OUT_FRIDA_TD] = main_run_FRIDA_evol_VI(SETTINGS);
save(['out_frida_static_',SETTINGS.filename,'.mat'], 'OUT_FRIDA_TD', 'IE_evol', 'meshData_pla', 'meshData');
